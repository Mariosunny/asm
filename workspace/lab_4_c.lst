
as12, an absolute assembler for Motorola MCU's, version 1.2h

0014                    N       equ     20              ; array size
0003                    qnt     equ     3               ; divisor
1500                            org     $1500
1500                    div     rmb     $20             ; reserve 32 bytes for divisible-by-3 array
1520                    ndiv    rmb     $20             ; reserve 32 bytes for not-divisible-by-3 array
1540                    arrc    rmb     1               ; reserve 1 byte for main array counter
1541                    divc    rmb     1               ; reserve 1 byte for divisible counter
1542                    ndivc   rmb     1               ; reserve 1 byte for non-divisible counter
2000                            org     $2000
2000 18 03 00 00 15 40          movw    #0000, arrc     ; clear array counters
2006 18 0b 00 15 42             movb    #00, ndivc      ; clear array counters
200b ce 20 3e           loop    ldx     #array          ; load pointer to main array into X
200e f6 15 40                   ldab    arrc            ; B = array counter
2011 1a e5                      abx                     ; B = B + X
2013 ec 00                      ldd     0,X             ; D = m[X]
2015 ce 00 03                   ldx     #qnt            ; X = 3
2018 18 10                      idiv                    ; X = D/X, D = remainder
201a ce 20 3e                   ldx     #array          ; load pointer to main array into X again
201d c1 00                      cmpb    #0              ; compare least significant byte in D to 0
201f 27 08                      beq     isdiv           ; if remainder == 0, goto isdiv branch
2021 cd 15 20                   ldy     #ndiv           ; load pointer to non-divisible array into Y
2024 72 15 42                   inc     ndivc           ; increment non-divisible counter
2027 20 06                      bra     done            ; branch to done, skip over true block
2029 cd 15 00           isdiv   ldy     #div            ; load pointer to divisible array into Y
202c 72 15 41                   inc     divc            ; increment divisible counter
202f 18 0a 00 40        done    movb    0,X,0,Y         ; move current element to designated array
2033 72 15 40                   inc     arrc            ; increment main array pointer
2036 b6 15 40                   ldaa    arrc            ; A = main array pointer
2039 81 14                      cmpa    #N              ; compare A to array size
203b 26 ce                      bne     loop            ; loop if A < size
203d 3f                         swi
203e 01 03 05 06 13 29  array   db      1, 3, 5, 6, 19, 41, 53, 28, 13, 42, 76, 14, 20, 54, 64, 74, 29, 33, 41, 45
     35 1c 0d 2a 4c 0e
     14 36 40 4a 1d 21
     29 2d
                                end
                                

Executed: Fri Feb 24 16:22:55 2017
Total cycles: 79, Total bytes: 82
Total errors: 0, Total warnings: 0
