
as12, an absolute assembler for Motorola MCU's, version 1.2h

0005                    N	equ	5
1500                    	org	$1500
1500 0b 0e 0f 11 14     array	dc.b	11,14,15,17,20
1505                    sum	rmb	2	; reserve 2 bytes of memory for sum
1507                    i	rmb	1	; reserve 1 byte of memory for loop counter
2000                    	org	$2000	; program start
2000 86 00              	ldaa	#0	; A = 0
2002 7a 15 05           	staa	sum	; sum = 0
2005 7a 15 06           	staa 	sum+1	; [sum+1] = 0
2008 18 0b 05 15 07     	movb  #N,i  ; i = 5
200d f6 15 07           loop	ldab	i	; B = i
2010 c1 00              	cmpb	#0	; B == 0?
2012 27 15              	beq	done	; branch to done if B == 1
2014 ce 15 00           	ldx	#array; load pointer to array to X
2017 53                 	decb        ; B = B - 1
2018 1a e5              	abx		; X = X + B
201a e6 00              	ldab	0,X	; B = [X]
201c fd 15 05           	ldy	sum	; Y = [sum]
201f 19 ed              	aby		; B = B + Y
2021 7d 15 05           	sty	sum	; sum = Y
2024 73 15 07           	dec	i	; i--
2027 20 e4              	bra	loop	; branch back to loop
2029 3f                 done	swi		; loop finished
                        	end

Executed: Fri Feb 10 15:05:04 2017
Total cycles: 59, Total bytes: 47
Total errors: 0, Total warnings: 0
